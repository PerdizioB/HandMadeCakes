@model IEnumerable<HandMadeCakes.Models.Order>

@using System.Globalization

<h2 class="mb-4">Orders List</h2>

<table class="table table-hover table-bordered align-middle">
    <thead class="table-dark">
        <tr>
            <th scope="col">Order ID</th>
            <th scope="col">Customer</th>
            <th scope="col">Order Date</th>
            <th scope="col">Status</th>
            <th scope="col" class="text-end">Total</th>
            <th scope="col" style="width: 140px;">Details</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            var orderTotal = order.OrderItems?.Sum(i => i.Quantity * i.Price) ?? 0m;
            <tr>
                <td>@order.Id</td>
                <td>@order.FullName</td>
                <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                <td>
                    @* Exemplo simples de status, pode ajustar conforme seu modelo *@
                    @switch (order.Status?.ToLower())
                    {
                        case "shipped":
                            <span class="badge bg-success">Shipped</span>
                            break;
                        case "cancelled":
                            <span class="badge bg-danger">Cancelled</span>
                            break;
                        default:
                            <span class="badge bg-warning text-dark">Pending</span>
                            break;
                    }
                </td>
                <td class="text-end">@orderTotal.ToString("C", CultureInfo.CurrentCulture)</td>
                <td>
                    <a asp-area="Admin" asp-controller="Order" asp-action="Details" asp-route-id="@order.Id"
                       class="btn btn-sm btn-primary" title="View Order Details">
                        <i class="bi bi-eye"></i> View
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
